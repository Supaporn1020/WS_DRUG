'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace WS_DRUGG
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WS_DRUGSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WS_DRUG
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private XML_SEARCH_DRUG_LCNOperationCompleted As System.Threading.SendOrPostCallback
        
        Private XML_SEARCH_DRUG_PRODUCTOperationCompleted As System.Threading.SendOrPostCallback
        
        Private XML_SEARCH_DRUG_PRODUCT_ALLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private XML_GET_DRUG_ESUBOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.WS_DRUG.My.MySettings.Default.WS_DRUG_WS_DRUGG_WS_DRUG
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event XML_SEARCH_DRUG_LCNCompleted As XML_SEARCH_DRUG_LCNCompletedEventHandler
        
        '''<remarks/>
        Public Event XML_SEARCH_DRUG_PRODUCTCompleted As XML_SEARCH_DRUG_PRODUCTCompletedEventHandler
        
        '''<remarks/>
        Public Event XML_SEARCH_DRUG_PRODUCT_ALLCompleted As XML_SEARCH_DRUG_PRODUCT_ALLCompletedEventHandler
        
        '''<remarks/>
        Public Event XML_GET_DRUG_ESUBCompleted As XML_GET_DRUG_ESUBCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/XML_SEARCH_DRUG_LCN", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function XML_SEARCH_DRUG_LCN(ByVal USERNAME As String, ByVal PASSWORD As String, ByVal Newcode As String) As String
            Dim results() As Object = Me.Invoke("XML_SEARCH_DRUG_LCN", New Object() {USERNAME, PASSWORD, Newcode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub XML_SEARCH_DRUG_LCNAsync(ByVal USERNAME As String, ByVal PASSWORD As String, ByVal Newcode As String)
            Me.XML_SEARCH_DRUG_LCNAsync(USERNAME, PASSWORD, Newcode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub XML_SEARCH_DRUG_LCNAsync(ByVal USERNAME As String, ByVal PASSWORD As String, ByVal Newcode As String, ByVal userState As Object)
            If (Me.XML_SEARCH_DRUG_LCNOperationCompleted Is Nothing) Then
                Me.XML_SEARCH_DRUG_LCNOperationCompleted = AddressOf Me.OnXML_SEARCH_DRUG_LCNOperationCompleted
            End If
            Me.InvokeAsync("XML_SEARCH_DRUG_LCN", New Object() {USERNAME, PASSWORD, Newcode}, Me.XML_SEARCH_DRUG_LCNOperationCompleted, userState)
        End Sub
        
        Private Sub OnXML_SEARCH_DRUG_LCNOperationCompleted(ByVal arg As Object)
            If (Not (Me.XML_SEARCH_DRUG_LCNCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent XML_SEARCH_DRUG_LCNCompleted(Me, New XML_SEARCH_DRUG_LCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/XML_SEARCH_DRUG_PRODUCT", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function XML_SEARCH_DRUG_PRODUCT(ByVal USERNAME As String, ByVal PASSWORD As String, ByVal Newcode As String) As String
            Dim results() As Object = Me.Invoke("XML_SEARCH_DRUG_PRODUCT", New Object() {USERNAME, PASSWORD, Newcode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub XML_SEARCH_DRUG_PRODUCTAsync(ByVal USERNAME As String, ByVal PASSWORD As String, ByVal Newcode As String)
            Me.XML_SEARCH_DRUG_PRODUCTAsync(USERNAME, PASSWORD, Newcode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub XML_SEARCH_DRUG_PRODUCTAsync(ByVal USERNAME As String, ByVal PASSWORD As String, ByVal Newcode As String, ByVal userState As Object)
            If (Me.XML_SEARCH_DRUG_PRODUCTOperationCompleted Is Nothing) Then
                Me.XML_SEARCH_DRUG_PRODUCTOperationCompleted = AddressOf Me.OnXML_SEARCH_DRUG_PRODUCTOperationCompleted
            End If
            Me.InvokeAsync("XML_SEARCH_DRUG_PRODUCT", New Object() {USERNAME, PASSWORD, Newcode}, Me.XML_SEARCH_DRUG_PRODUCTOperationCompleted, userState)
        End Sub
        
        Private Sub OnXML_SEARCH_DRUG_PRODUCTOperationCompleted(ByVal arg As Object)
            If (Not (Me.XML_SEARCH_DRUG_PRODUCTCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent XML_SEARCH_DRUG_PRODUCTCompleted(Me, New XML_SEARCH_DRUG_PRODUCTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/XML_SEARCH_DRUG_PRODUCT_ALL", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function XML_SEARCH_DRUG_PRODUCT_ALL(ByVal USERNAME As String, ByVal PASSWORD As String, ByVal Newcode As String) As String
            Dim results() As Object = Me.Invoke("XML_SEARCH_DRUG_PRODUCT_ALL", New Object() {USERNAME, PASSWORD, Newcode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub XML_SEARCH_DRUG_PRODUCT_ALLAsync(ByVal USERNAME As String, ByVal PASSWORD As String, ByVal Newcode As String)
            Me.XML_SEARCH_DRUG_PRODUCT_ALLAsync(USERNAME, PASSWORD, Newcode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub XML_SEARCH_DRUG_PRODUCT_ALLAsync(ByVal USERNAME As String, ByVal PASSWORD As String, ByVal Newcode As String, ByVal userState As Object)
            If (Me.XML_SEARCH_DRUG_PRODUCT_ALLOperationCompleted Is Nothing) Then
                Me.XML_SEARCH_DRUG_PRODUCT_ALLOperationCompleted = AddressOf Me.OnXML_SEARCH_DRUG_PRODUCT_ALLOperationCompleted
            End If
            Me.InvokeAsync("XML_SEARCH_DRUG_PRODUCT_ALL", New Object() {USERNAME, PASSWORD, Newcode}, Me.XML_SEARCH_DRUG_PRODUCT_ALLOperationCompleted, userState)
        End Sub
        
        Private Sub OnXML_SEARCH_DRUG_PRODUCT_ALLOperationCompleted(ByVal arg As Object)
            If (Not (Me.XML_SEARCH_DRUG_PRODUCT_ALLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent XML_SEARCH_DRUG_PRODUCT_ALLCompleted(Me, New XML_SEARCH_DRUG_PRODUCT_ALLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/XML_GET_DRUG_ESUB", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function XML_GET_DRUG_ESUB(ByVal USERNAME As String, ByVal PASSWORD As String, ByVal Newcode As String) As String
            Dim results() As Object = Me.Invoke("XML_GET_DRUG_ESUB", New Object() {USERNAME, PASSWORD, Newcode})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub XML_GET_DRUG_ESUBAsync(ByVal USERNAME As String, ByVal PASSWORD As String, ByVal Newcode As String)
            Me.XML_GET_DRUG_ESUBAsync(USERNAME, PASSWORD, Newcode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub XML_GET_DRUG_ESUBAsync(ByVal USERNAME As String, ByVal PASSWORD As String, ByVal Newcode As String, ByVal userState As Object)
            If (Me.XML_GET_DRUG_ESUBOperationCompleted Is Nothing) Then
                Me.XML_GET_DRUG_ESUBOperationCompleted = AddressOf Me.OnXML_GET_DRUG_ESUBOperationCompleted
            End If
            Me.InvokeAsync("XML_GET_DRUG_ESUB", New Object() {USERNAME, PASSWORD, Newcode}, Me.XML_GET_DRUG_ESUBOperationCompleted, userState)
        End Sub
        
        Private Sub OnXML_GET_DRUG_ESUBOperationCompleted(ByVal arg As Object)
            If (Not (Me.XML_GET_DRUG_ESUBCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent XML_GET_DRUG_ESUBCompleted(Me, New XML_GET_DRUG_ESUBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub XML_SEARCH_DRUG_LCNCompletedEventHandler(ByVal sender As Object, ByVal e As XML_SEARCH_DRUG_LCNCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class XML_SEARCH_DRUG_LCNCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub XML_SEARCH_DRUG_PRODUCTCompletedEventHandler(ByVal sender As Object, ByVal e As XML_SEARCH_DRUG_PRODUCTCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class XML_SEARCH_DRUG_PRODUCTCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub XML_SEARCH_DRUG_PRODUCT_ALLCompletedEventHandler(ByVal sender As Object, ByVal e As XML_SEARCH_DRUG_PRODUCT_ALLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class XML_SEARCH_DRUG_PRODUCT_ALLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")>  _
    Public Delegate Sub XML_GET_DRUG_ESUBCompletedEventHandler(ByVal sender As Object, ByVal e As XML_GET_DRUG_ESUBCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class XML_GET_DRUG_ESUBCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
